{"version":3,"sources":["context/NoteActions.js","components/AddNote/AddNote.jsx","constants/MainCostants.js","services/NoteService.js","components/AddNoteForm/AddNoteForm.jsx","components/Note/Note.jsx","components/NoteList/NoteList.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","context/NoteReducer.js","index.js"],"names":["setNote","payload","type","setModal","mapDispatchToProps","connect","state","modal","props","onClick","className","size","Backend","ROUTES","addNoteUrl","API_URL","NoteService","axios","get","then","res","data","newNote","post","window","location","reload","err","console","log","note","noteTitle","useRef","noteBody","useState","formState","setFormState","useEffect","_id","title","body","footer","ref","defaultValue","placeholder","cols","rows","current","value","createNote","handleSubmit","getNotes","notes","a","call","map","App","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","NoteReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.047949bb.chunk.js","sourcesContent":["export const getNotes = payload => ({\n    type: 'GET_NOTES',\n    payload\n})\n\nexport const setNote = payload => ({\n    type: 'GET_NOTE',\n    payload\n})\n\nexport const setModal = payload => ({\n    type: 'SET_MODAL',\n    payload\n})","import React from 'react'\nimport {IoMdAddCircleOutline} from 'react-icons/io'\nimport { connect } from 'react-redux'\nimport {setModal} from '../../context/NoteActions'\nimport './addNoteStyles.scss'\n\nconst AddNote = (props) => {\n    const {modal} = props\n\n    const handleClick = () => {\n        props.setModal(!modal)\n    }\n    return (\n        <div onClick={() => handleClick()} className=\"add-note\">\n            <IoMdAddCircleOutline size={64} />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    setModal\n}\n\nconst mapStateToProps = state => {\n    return {\n        modal: state.modal\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNote);\n","export class Backend {\n\tstatic ROUTES = {\n\t\taddNoteUrl: \"note\",\n\t};\n\n\tstatic API_URL = \"https://young-escarpment-43192.herokuapp.com/\";\n}","import axios from \"axios\";\nimport {Backend} from \"../constants/MainCostants\"\n\nclass NoteService {\n    static getNotes() {\n        return axios.get(Backend.API_URL)\n            .then(res => res.data)\n    }\n\n    static createNote(newNote) {\n        return axios.post(Backend.API_URL+Backend.ROUTES.addNoteUrl, newNote)\n            .then(res => window.location.reload())\n            .then(err => console.log(err))\n    }\n}\n\nexport default NoteService","import React, {useRef, useState, useEffect} from 'react'\nimport NoteService from '../../services/NoteService';\nimport {AiOutlineCloseCircle} from 'react-icons/ai'\nimport './addNoteForm.scss'\nimport { connect } from 'react-redux';\nimport { setModal, setNote } from '../../context/NoteActions';\n\nconst AddNoteForm = (props) => {\n    const {modal, note} = props\n    const noteTitle = useRef(null)\n    const noteBody = useRef(null);\n    const [formState, setFormState] = useState(false)\n    \n    useEffect(() => {\n        if(note._id){\n            setFormState(true)\n            console.log('paso por aqui')\n        }else {\n            setFormState(false)\n        }\n    }, [modal])\n\n    const handleSubmit = () => {\n        if (formState) {\n            console.log('modo edicion!')\n            //conectar con el api\n        }else {\n            console.log(noteTitle.current.value, noteBody.current.value);\n            const newNote = {\n                        title: noteTitle.current.value,\n                        body: noteBody.current.value,\n                        footer: 'chatuzPark'\n                    };\n            NoteService.createNote(newNote);\n            props.setModal(!modal)\n        }\n    }\n\n    const handleClick = () => {\n        props.setModal(!modal)\n        //move to constant\n        const resetNote = {\n            _id: null,\n            title: \"\",\n            body: \"\",\n            footer: \"\"\n        }\n        props.setNote(resetNote)\n    }\n\n    console.log(note)\n\n\n    return (\n\t\t\t<div className={modal ? \"form-container\" : \"form-container hide\"}>\n\t\t\t\t<div className=\"add-note-form\">\n\t\t\t\t\t<AiOutlineCloseCircle onClick={() => handleClick()} size={22} />\n\t\t\t\t\t<h2>{ formState ? 'editar nota' : 'crear nota' }</h2>\n\t\t\t\t\t<input ref={noteTitle} defaultValue={note.title} type=\"text\" placeholder=\"note title\" />\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tref={noteBody}\n                        defaultValue={note.body}\n\t\t\t\t\t\tplaceholder=\"note body\"\n\t\t\t\t\t\tcols=\"30\"\n\t\t\t\t\t\trows=\"10\"\n\t\t\t\t\t></textarea>\n\t\t\t\t\t<button onClick={() => handleSubmit()}>guardar</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nconst mapDispatchToProps = {\n    setModal,\n    setNote\n}\n\nconst mapStateToProps = state => {\n    return {\n        modal: state.modal,\n        note: state.note\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNoteForm);\n","import React from 'react'\nimport './noteStyle.scss'\nimport {BiEdit} from 'react-icons/bi'\nimport { FiTrash2 } from \"react-icons/fi\";\nimport { connect } from 'react-redux';\nimport {setNote, setModal} from '../../context/NoteActions'\n\nconst Note = (props) => {\n    const {_id, title, body, footer, modal} = props\n    const handleClick = () => {\n        props.setNote({\n            _id: _id,\n            title: title,\n            body: body,\n            footer: footer\n        })\n        props.setModal(!modal)\n    }\n    return (\n        <div className=\"note bg-normal\">\n            <BiEdit onClick={() => handleClick()} className=\"edit-icon\" size={24} />\n            <FiTrash2 className=\"trash-icon\" size={22} />\n            <h2>{title}</h2>\n            <p>{body}</p>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    setNote,\n    setModal\n}\n\nconst mapStateToProps = state => {\n    return {\n        modal: state.modal\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport {getNotes} from '../../context/NoteActions'\nimport AddNote from '../AddNote/AddNote'\nimport AddNoteForm from '../AddNoteForm/AddNoteForm'\nimport Note from '../Note/Note'\nimport './noteListStyle.scss'\nimport NoteService from '../../services/NoteService'\n\nconst NoteList = (props) => {\n    const {notes} = props\n\n    useEffect(() => {\n        const call = async () => {\n            const res = await NoteService.getNotes()\n            props.getNotes([...res])\n        }\n        call()\n    }, [])\n\n    return (\n        <div className=\"note-list\">\n            {notes.map(note => {\n                return (\n                    <Note key={note._id} {...note} />\n                )\n            })}\n            <AddNoteForm />\n            <AddNote />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    getNotes\n}\n\nconst mapStateToProps = state => {\n    return {\n        notes: state.notes\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList)","import React from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList/NoteList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NoteList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const NoteReducer = (state, action) => {\n    switch (action.type){\n        case 'GET_NOTES':\n            return {\n                ...state,\n                notes: action.payload\n            }\n\n        case 'GET_NOTE':\n            return {\n                ...state,\n                note: action.payload\n            }\n\n        case 'SET_MODAL':\n            return {\n                ...state,\n                modal: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default NoteReducer\n\n// export default function (state, action) {\n//     const {payload, action} = action\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport NoteReducer from './context/NoteReducer'\n\nimport {Provider} from 'react-redux'\nimport { createStore } from \"redux\";\n\nconst initialState = {\n\tnotes: [],\n\tnote: {\n\t\t_id: null,\n\t\ttitle: \"\",\n\t\tbody: \"\",\n\t\tfooter: \"\"\n\t},\n\tmodal: false\n};\n\nconst store = createStore(NoteReducer, initialState);\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}