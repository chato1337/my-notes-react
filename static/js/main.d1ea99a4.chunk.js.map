{"version":3,"sources":["context/NoteActions.js","components/AddNote/AddNote.jsx","constants/MainCostants.js","services/NoteService.js","components/AddNoteForm/AddNoteForm.jsx","components/Note/Note.jsx","components/NoteList/NoteList.jsx","services/UserService.js","components/Header/Header.jsx","layouts/Main.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","context/NoteReducer.js","index.js"],"names":["getNotes","payload","type","setNote","setModal","mapDispatchToProps","connect","state","modal","props","onClick","className","size","Backend","ROUTES","addNoteUrl","editNoteUrl","deleteNoteUrl","addUserUrl","API_URL","NoteService","axios","get","then","res","data","newNote","post","console","log","catch","err","note","put","delete","response","noteTitle","useRef","noteBody","color","useState","formState","setFormState","useEffect","_id","handleClose","title","body","footer","current","handleSubmit","a","editedNote","value","editNote","noteList","createNote","ref","defaultValue","placeholder","cols","rows","htmlFor","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","deleteNote","notes","map","UserService","createUser","user","window","location","reload","Header","username","email","password","newUser","Main","children","loadData","Object","keys","length","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","NoteReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d1ea99a4.chunk.js","sourcesContent":["export const getNotes = payload => ({\n    type: 'GET_NOTES',\n    payload\n})\n\nexport const setNote = payload => ({\n    type: 'GET_NOTE',\n    payload\n})\n\nexport const setModal = payload => ({\n    type: 'SET_MODAL',\n    payload\n})","import React from 'react'\nimport {IoMdAddCircleOutline} from 'react-icons/io'\nimport { connect } from 'react-redux'\nimport {setModal} from '../../context/NoteActions'\nimport './addNoteStyles.scss'\n\nconst AddNote = (props) => {\n    const {modal} = props\n\n    const handleClick = () => {\n        props.setModal(!modal)\n    }\n    return (\n        <div onClick={() => handleClick()} className=\"add-note\">\n            <IoMdAddCircleOutline size={64} />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    setModal\n}\n\nconst mapStateToProps = state => {\n    return {\n        modal: state.modal\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNote);\n","import NoteService from \"../services/NoteService\";\n\nexport class Backend {\n\tstatic ROUTES = {\n\t\taddNoteUrl: \"note\",\n\t\teditNoteUrl: \"edit-note\",\n\t\tdeleteNoteUrl: \"delete\",\n\n\t\t//users\n\t\taddUserUrl: \"signup\"\n\t};\n\n\tstatic API_URL = \"https://young-escarpment-43192.herokuapp.com/\";\n\n}\n\nexport class Methods {\n\tstatic refreshApp = () => {\n\t\treturn window.location.reload()\n\t}\n}\n\nexport class Note {\n\tstatic blankNote = () => {\n\t\treturn {\n            _id: null,\n            title: \"\",\n            body: \"\",\n            footer: \"\",\n            color: \"normal\"\n\t\t}\n\t}\n}","import axios from \"axios\";\nimport {Backend, Methods} from \"../constants/MainCostants\"\n\nclass NoteService {\n    static getNotes() {\n        return axios.get(Backend.API_URL)\n            .then(res => res.data)\n    }\n\n    static createNote(newNote) {\n        return axios.post(Backend.API_URL+Backend.ROUTES.addNoteUrl, newNote)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    static editNote(note) {\n        return axios.put(Backend.API_URL+Backend.ROUTES.editNoteUrl, note)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    static deleteNote(note) {\n        return axios.delete(Backend.API_URL+Backend.ROUTES.deleteNoteUrl, {data: note})\n        .then(response => console.log(response))\n        .catch(err => console.log(err))\n    }\n}\n\nexport default NoteService","import React, {useRef, useState, useEffect} from 'react'\nimport NoteService from '../../services/NoteService';\nimport {AiOutlineCloseCircle} from 'react-icons/ai'\nimport './addNoteForm.scss'\nimport { connect } from 'react-redux';\nimport { setModal, setNote, getNotes } from '../../context/NoteActions';\n\nconst AddNoteForm = (props) => {\n    const {modal, note, getNotes} = props\n    const noteTitle = useRef(null)\n    const noteBody = useRef(null);\n    const color = useRef(null)\n    const [formState, setFormState] = useState(false)\n    \n    useEffect(() => {\n        console.log(note)\n        if(note._id){\n            setFormState(true)\n        }else {\n            setFormState(false)\n        }\n    }, [modal])\n\n    const handleClose = () => {\n        console.log('entro aca')\n        props.setModal(!modal)\n        //move to constant\n        const resetNote = {\n            _id: null,\n            title: \"\",\n            body: \"\",\n            footer: \"\",\n            color: \"normal\"\n        }\n        props.setNote(resetNote)\n\n        noteTitle.current = \"\"\n        noteBody.current = \"\"\n        color.current = \"\"\n    }\n\n    const handleSubmit = async () => {\n        if (formState) {\n            console.log('modo edicion!')\n            //conectar con el api\n            const editedNote = {\n                _id: note._id,\n                title: noteTitle.current.value,\n                body: noteBody.current.value,\n                color: color.current.value,\n                footer: 'chatuzPark'\n            }\n            await NoteService.editNote(editedNote)\n            const noteList = await NoteService.getNotes()\n            getNotes(noteList)\n            handleClose()\n        }else {\n            console.log(noteTitle.current.value, noteBody.current.value);\n            const newNote = {\n                        title: noteTitle.current.value,\n                        body: noteBody.current.value,\n                        color: color.current.value,\n                        footer: 'chatuzPark'\n                    };\n            await NoteService.createNote(newNote);\n            const noteList = await NoteService.getNotes()\n            getNotes(noteList)\n            handleClose()\n        }\n    }\n\n    // console.log(note)\n\n    return (\n\t\t\t<div className={modal ? \"form-container\" : \"form-container hide\"}>\n\t\t\t\t<div className=\"add-note-form\">\n\t\t\t\t\t<AiOutlineCloseCircle onClick={() => handleClose()} size={22} />\n\t\t\t\t\t<h2>{ formState ? 'editar nota' : 'crear nota' }</h2>\n\t\t\t\t\t<input ref={noteTitle} defaultValue={note.title} type=\"text\" placeholder=\"note title\" />\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tref={noteBody}\n                        defaultValue={note.body}\n\t\t\t\t\t\tplaceholder=\"note body\"\n\t\t\t\t\t\tcols=\"30\"\n\t\t\t\t\t\trows=\"10\"\n\t\t\t\t\t></textarea>\n                    <label htmlFor=\"\">color note:</label>\n                    <select ref={color} defaultValue={note.body}>\n                        <option value=\"normal\">normal</option>\n                        <option value=\"yellow\">yellow</option>\n                        <option value=\"green\">green</option>\n                        <option value=\"orange\">orange</option>\n                    </select>\n\t\t\t\t\t<button onClick={() => handleSubmit()}>guardar</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nconst mapDispatchToProps = {\n    setModal,\n    setNote,\n    getNotes\n}\n\nconst mapStateToProps = state => {\n    return {\n        modal: state.modal,\n        note: state.note\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNoteForm);\n","import React from 'react'\nimport './noteStyle.scss'\nimport {BiEdit} from 'react-icons/bi'\nimport { FiTrash2 } from \"react-icons/fi\";\nimport { connect } from 'react-redux';\nimport {setNote, setModal} from '../../context/NoteActions'\nimport Swal from 'sweetalert2';\nimport NoteService from '../../services/NoteService';\n\nconst Note = (props) => {\n    const {_id, title, body, footer, modal, color} = props\n    const handleClick = () => {\n        props.setNote({\n            _id: _id,\n            title: title,\n            body: body,\n            footer: footer\n        })\n        props.setModal(!modal)\n    }\n\n    const handleDelete = () => {\n        Swal.fire({\n                title: \"Estas seguro?\",\n                text: `la nota ${title} se eliminara y no podra revertir esta accion`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n                    NoteService.deleteNote({\"_id\": _id})\n                }\n            });\n    }\n    return (\n        <div className={`note bg-${color || 'normal'}`}>\n            <BiEdit onClick={() => handleClick()} className=\"edit-icon\" size={24} />\n            <FiTrash2 onClick={() => handleDelete()} className=\"trash-icon\" size={22} />\n            <h3>{title}</h3>\n            <pre>{body}</pre>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    setNote,\n    setModal\n}\n\nconst mapStateToProps = state => {\n    return {\n        modal: state.modal\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport AddNote from '../AddNote/AddNote'\nimport AddNoteForm from '../AddNoteForm/AddNoteForm'\nimport Note from '../Note/Note'\nimport './noteListStyle.scss'\n\nconst NoteList = (props) => {\n    const {notes} = props\n\n    return (\n        <div className=\"note-list\">\n            {notes.map(note => {\n                return (\n                    <Note key={note._id} {...note} />\n                )\n            })}\n            <AddNoteForm />\n            <AddNote />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        notes: state.notes\n    }\n}\nexport default connect(mapStateToProps)(NoteList)","import axios from \"axios\"\nimport { Backend } from \"../constants/MainCostants\"\n\nexport class UserService {\n    static createUser = user => {\n        return axios.post(Backend.API_URL+Backend.ROUTES.addUserUrl, user)\n            .then(res => window.location.reload())\n    }\n}","import React, {useRef} from 'react'\nimport { UserService } from '../../services/UserService'\n\nconst Header = () => {\n    const username = useRef(null)\n    const email = useRef(null)\n    const password = useRef(null)\n\n    const handleSubmit = () => {\n        const newUser = {\n            username: username.current.value,\n            email: email.current.value,\n            password: password.current.value\n        }\n        UserService.createUser(newUser)\n        console.log(newUser)\n    }\n\n    return (\n        <nav className=\"header-container\">\n            <div>Hello: Guest</div>\n            <div>\n                <label htmlFor=\"\">username</label>\n                <input ref={username} type=\"text\" />\n                <label htmlFor=\"\">email</label>\n                <input ref={email} type=\"email\" />\n                <label htmlFor=\"\">password</label>\n                <input ref={password} type=\"pasword\" />\n                <button onClick={handleSubmit}>Create Account</button>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from '../components/Header/Header'\n\nconst Main = ({children}) => {\n    return (\n        <div>\n            <Header />\n            {children}\n        </div>\n    )\n}\n\nexport default Main\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport NoteList from './components/NoteList/NoteList';\nimport Main from './layouts/Main';\nimport { getNotes } from './context/NoteActions'\nimport NoteService from './services/NoteService';\n\nfunction App({ getNotes, notes }) {\n  \n  const loadData = async () => {\n    const noteList = await NoteService.getNotes()\n    getNotes([...noteList])\n  }\n  \n  useEffect(() => {\n    loadData()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Main>\n        {\n          Object.keys(notes).length > 0 ?\n            <NoteList />\n            :\n            'loading...'\n        }\n      </Main>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = {\n  getNotes\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const NoteReducer = (state, action) => {\n    switch (action.type){\n        case 'GET_NOTES':\n            return {\n                ...state,\n                notes: action.payload\n            }\n\n        case 'GET_NOTE':\n            return {\n                ...state,\n                note: action.payload\n            }\n\n        case 'SET_MODAL':\n            return {\n                ...state,\n                modal: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default NoteReducer\n\n// export default function (state, action) {\n//     const {payload, action} = action\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport NoteReducer from './context/NoteReducer'\n\nimport {Provider} from 'react-redux'\nimport { createStore } from \"redux\";\n\nconst initialState = {\n\tnotes: [],\n\tnote: {\n\t\t_id: null,\n\t\ttitle: \"\",\n\t\tbody: \"\",\n\t\tfooter: \"\"\n\t},\n\tmodal: false\n};\n\nconst store = createStore(NoteReducer, initialState);\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}